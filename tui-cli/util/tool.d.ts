/// <reference types="node" />
import * as path from 'path';
import { ScaffoldType } from '../declare';
export declare type MPath = string | path.ParsedPath;
export declare function getModifiedTime(mpath: MPath): number;
export declare function pathToString(mpath: MPath): string;
export declare function pathToParse(mpath: MPath): path.ParsedPath;
export declare function isFile(mpath: MPath): boolean;
export declare function isDir(mpath: MPath): boolean;
export declare function unlink(mpath: MPath): any;
export declare function readFile(mpath: MPath): string;
export declare function writeFile(mpath: MPath, data: string): void;
export declare function copyFile(srcFilePath: string, destFilePath: string): void;
export declare function overrideNpmLog(): void;
export declare function setLernaConfig(version?: string): void;
export declare function getLernaPackageConfigs(): string[];
export declare function getRealPkgName(name: string): string;
export declare function getRealPkgNameWithScope(name: string): string;
export declare function getRealPageName(name: string): string;
export declare function getScaffoldPath(scaffoldType: ScaffoldType, filePath?: string): string;
export declare function getDestPackagePath(pkgName: string, filePath?: string): string;
export declare function getDestPagePath(pkgNameSuffix: string, filePath?: string): string;
export declare function getDestProjectPath(projectName: string, filePath?: string): string;
export declare function buildNpmWXCs(pkgNames: string[]): void;
export declare function pageName2Pages(name?: string | string[]): string[];
export declare function checkLocalImgUrl(url: string): boolean;
export declare function camelCase2Dash(str: string): string;
export declare function dash2CamelCase(str: string): string;
export declare function isMustcacheValue(value: string): boolean;
export declare function getMustcacheValue(value: string): string;
export declare function checkWechatdevtoolsRunningOnWindows(): Promise<{}>;
export declare function notifyPackageUpdate(data: any): void;
